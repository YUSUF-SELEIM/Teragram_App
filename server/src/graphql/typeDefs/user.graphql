type User {
  id: String!
  name: String!
  email: String!
  password: String!
  imageUrl: String
  chats: [Chat!]!  # List of chats that the user is part of
}

type AuthPayload {
  token: String!
}

type Query {
  getAllUsers: [User!]!
  getUserInfo(id: ID!): User
}

type Mutation {
  register(name: String!, email: String!, password: String!, confirmPassword: String!): User! 
  login(email: String!, password: String!): AuthPayload
  updateUserInfo(id: ID!, name: String, imageUrl: String): User!
}